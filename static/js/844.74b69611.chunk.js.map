{"version":3,"file":"static/js/844.74b69611.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","MyPages/Contacts/Contacts.styled.jsx","MyPages/Contacts/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  width: 35%;\n  border: 2px solid black;\n  padding-left: 10px;\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\nexport const Input = styled.input`\n  margin: 10px;\n  display: block;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk, getContactsThunk } from 'redux/contactsThunk';\n\nimport { Input, Button } from './Form.styled';\nimport * as MyForm from './Form.styled';\nimport Notiflix from 'notiflix';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const contacts = useSelector(state => state.contacts.items);\n  return (\n    <MyForm.Form\n      onSubmit={e => {\n        const notifly = () =>\n          Notiflix.Notify.warning(`${name} is alredy in contacts`);\n        const contact = {\n          name: name,\n          number: number,\n        };\n        e.preventDefault();\n        if (\n          contacts.some(\n            value => value.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n          )\n        ) {\n          notifly();\n        } else {\n          dispatch(addContactsThunk(contact));\n          reset();\n        }\n      }}\n    >\n      <Input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />{' '}\n      <Input\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add</Button>\n    </MyForm.Form>\n  );\n};\nexport default Form;\n","import styled from 'styled-components';\n\nexport const FilterCount = styled.div`\n  padding-bottom: 15px;\n  padding-top: 20px;\n`;\n\nexport const Label = styled.label`\n  color: #000;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n  align-items: flex-start;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 10px;\n  padding: 8px;\n  border-radius: 8px;\n  border: 2px solid black;\n`;\n","import React from 'react';\nimport { FilterCount, Label, Input } from './Filter.styled';\nimport { getFilter, setFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterCount>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" name={filter} value={filter} onChange={onChange} />\n      </Label>\n    </FilterCount>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 8px;\n  border: 1px solid black\n  list-style: none;\n  padding-left: 0\n`;\n\nexport const Item = styled.li`\n  border: 1px solid black;\n  padding: 6px;\n  border-radius: 8px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px 8px;\n  border: 1px solid black;\n\n  &:hover,\n  &:focus {\n    color: green;\n    background-color: #fba003;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contactsSlice';\nimport { getFilter } from 'redux/filterSlice';\nimport { delContactsThunk } from 'redux/contactsThunk';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filtered = useSelector(getFilter);\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(filtered.toLowerCase())\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name + ' : ' + number}\n          {\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(delContactsThunk(id))}\n            >\n              delete\n            </Button>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1380px;\n  padding: 10px;\n  margin: 0 auto;\n  display:flex;\n  gap: 20px;\n  justify-content:center;\n  align-items:center;\n`;\n","import Form from '../../components/Form/Form';\n\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Container } from './Contacts.styled';\nconst { useEffect } = require('react');\nconst { useDispatch } = require('react-redux');\nconst { getContactsThunk } = require('redux/contactsThunk');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk);\n  }, [dispatch]);\n  return (\n    <Container>\n      <Form />\n      <div>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","_templateObject3","Button","_templateObject4","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useEffect","getContactsThunk","handleChange","evt","_evt$target","target","value","contacts","useSelector","state","items","_jsxs","MyForm","onSubmit","e","contact","preventDefault","some","toLocaleLowerCase","Notiflix","concat","addContactsThunk","children","_jsx","onChange","type","placeholder","title","required","FilterCount","Label","filter","getFilter","setFilter","List","Item","getContacts","filtered","filteredContacts","_contact$name","toLowerCase","includes","map","_ref","id","onClick","delContactsThunk","Container","require","Filter","ContactList"],"sourceRoot":""}